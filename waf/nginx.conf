# waf/nginx.conf
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # ModSecurity
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity/modsecurity.conf;
    
    # Custom log format for security events
    log_format security_log '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'blocked="$modsec_blocked" rule_id="$modsec_rule_id"';
    
    # Upstream definitions
    upstream frontend {
        server frontend:3000;
        keepalive 32;
    }
    
    upstream api {
        server bff-service:3001;
        keepalive 32;
    }
    
    upstream security_service {
        server security-service:8005;
        keepalive 16;
    }
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=15r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=stream:10m rate=8r/s;
    limit_req_zone $binary_remote_addr zone=chat:10m rate=5r/s;
    
    # Map for user-friendly error responses
    map $status $error_message {
        default "Request processed successfully";
        403 "Security filter activated - please rephrase your message";
        429 "Too many requests - please wait a moment";
        406 "Content not acceptable - please modify your request";
    }
    
    server {
        listen 80 http2;
        listen 443 ssl http2;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
        
        # Custom error pages for security blocks
        error_page 403 @security_block;
        error_page 406 @content_filter;
        
        location @security_block {
            internal;
            add_header Content-Type application/json always;
            return 403 '{"error":"Security filter activated","message":"Your message contains potentially unsafe content. Please rephrase and try again.","code":"SEC_FILTER_001"}';
        }
        
        location @content_filter {
            internal;
            add_header Content-Type application/json always;
            return 406 '{"error":"Content filtered","message":"Your request contains restricted content patterns. Please modify your message.","code":"CONTENT_FILTER_001"}';
        }
        
        # Frontend - minimal security checks
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Chat endpoint with enhanced security
        location /api/chat {
            limit_req zone=chat burst=10 nodelay;
            
            # Pre-filter check with security service
            auth_request /auth-security;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $auth_user $upstream_http_x_user_id;
            
            # Enhanced ModSecurity rules for chat
            modsecurity_rules '
                SecRule REQUEST_BODY "@detectSQLi" \
                    "id:2001,phase:2,block,msg:\'SQL Injection Attempt in Chat\',logdata:\'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}\',severity:2"
                
                SecRule REQUEST_BODY "@rx (?i)(system|admin|root|password|token|key|secret|api_key)" \
                    "id:2002,phase:2,block,msg:\'Sensitive keyword detected\',logdata:\'Matched Data: %{MATCHED_VAR}\',severity:2"
                
                SecRule REQUEST_BODY "@rx (?i)(ignore|forget|override|bypass|disable).*(instruction|rule|filter|security)" \
                    "id:2003,phase:2,block,msg:\'Prompt injection attempt\',logdata:\'Matched Data: %{MATCHED_VAR}\',severity:2"
                
                SecRule REQUEST_BODY "@rx (?i)(show|display|reveal|extract|export|download).*(database|table|user|email|phone|ssn)" \
                    "id:2004,phase:2,block,msg:\'Data exfiltration attempt\',logdata:\'Matched Data: %{MATCHED_VAR}\',severity:2"
            ';
            
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-User-ID $auth_user;
        }
        
        # Security check endpoint (internal)
        location = /auth-security {
            internal;
            proxy_pass http://security_service/validate;
            proxy_pass_request_body on;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
        }
        
        # Server-Sent Events - NO ModSecurity, optimized for streaming
        location /api/chat/stream {
            limit_req zone=stream burst=15 nodelay;
            
            # Disable ModSecurity for streaming performance
            modsecurity off;
            
            # Basic content filtering via query params only
            if ($args ~ "(?i)(system|admin|bypass|inject)") {
                return 406;
            }
            
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Connection '';
            proxy_set_header Cache-Control 'no-cache';
            proxy_set_header X-Accel-Buffering 'no';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Streaming optimizations
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 24h;
            proxy_send_timeout 24h;
        }
        
        # API endpoints with standard security
        location /api/ {
            limit_req zone=api burst=25 nodelay;
            
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # File upload with enhanced validation
        location /api/documents/upload {
            limit_req zone=upload burst=5 nodelay;
            client_max_body_size 50M;
            
            # File type validation
            modsecurity_rules '
                SecRule FILES_TMPNAMES "@validateByteRange 32-126" \
                    "id:3001,phase:2,block,msg:\'Invalid file upload\',severity:2"
                
                SecRule FILES "@rx \\.(exe|bat|cmd|scr|vbs|ps1)$" \
                    "id:3002,phase:2,block,msg:\'Dangerous file type\',severity:2"
            ';
            
            proxy_pass http://api;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Health endpoints - bypass security
        location /api/health {
            modsecurity off;
            proxy_pass http://api;
        }
        
        # Security logs
        access_log /var/log/nginx/security.log security_log;
        error_log /var/log/nginx/security_error.log warn;
    }
}