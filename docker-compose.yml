# docker-compose.yml
version: '3.8'

services:
  waf:
    build:
      context: ./waf
      dockerfile: Dockerfile
    container_name: waf
    ports:
      - "3000:80"
      - "8443:443"
    depends_on:
      - frontend
      - bff-service

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=http://localhost/api
    depends_on:
      - bff-service

  bff-service:
    build:
      context: ./bff-service
      dockerfile: Dockerfile
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8003
      - AI_SERVICE_URL=http://ai-service:8000
      - DOC_SERVICE_URL=http://document-service:8001
      - CACHE_SERVICE_URL=http://cache-service:8002
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - auth-service
      - ai-service
      - document-service
      - cache-service

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - KEYCLOAK_SERVER_URL=http://keycloak:8080
      - KEYCLOAK_REALM=ai-chat
      - KEYCLOAK_CLIENT_ID=ai-chat-client
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - keycloak

  ai-service:
    build:
      context: .
      dockerfile: ./ai-service/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_TYPE=azure
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_DEPLOYMENT_NAME=${AZURE_DEPLOYMENT_NAME:-gpt-4}
      - AZURE_DEPLOYMENT_NAME_35=${AZURE_DEPLOYMENT_NAME_35:-gpt-35-turbo}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2024-02-15-preview}
      - ELASTICSEARCH_URL=${EXTERNAL_ELASTICSEARCH_URL:-http://elasticsearch:9200}
      - ELASTICSEARCH_API_KEY=${ELASTICSEARCH_API_KEY}
      - ELASTICSEARCH_VERIFY_CERTS=false
      - VECTOR_SERVICE_URL=http://vector-service:8004
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - elasticsearch
      - vector-service

  document-service:
    build:
      context: ./document-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - ELASTICSEARCH_URL=${EXTERNAL_ELASTICSEARCH_URL:-http://elasticsearch:9200}
      - ELASTICSEARCH_API_KEY=${ELASTICSEARCH_API_KEY}
      - ELASTICSEARCH_VERIFY_CERTS=false
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - elasticsearch
    volumes:
      - doc_uploads:/tmp/uploads

  vector-service:
    build:
      context: ./vector-service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - qdrant

  cache-service:
    build:
      context: ./cache-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - REDIS_URL=redis://redis:6379
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - redis

  security-service:
    build:
      context: ./security-service
      dockerfile: Dockerfile
    ports:
      - "8005:8005"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - otel-collector

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
    command: start-dev
    depends_on:
      - keycloak-db
    volumes:
      - keycloak_data:/opt/keycloak/data

  keycloak-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=${ELASTICSEARCH_SECURITY_ENABLED:-false}
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data

  qdrant:
    image: qdrant/qdrant:v1.7.4
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    ports:
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./otel-collector.yaml:/etc/otelcol-contrib/otel-collector.yaml
    command: ["--config=/etc/otelcol-contrib/otel-collector.yaml"]
    # depends_on:
    #   - elasticsearch

volumes:
  es_data:
  qdrant_data:
  redis_data:
  doc_uploads:
  keycloak_data:
  keycloak_db_data: